{"version":3,"sources":["logic/dates.js","component/Digit.js","component/Counter.js","component/Thought.js","component/App.js","index.js"],"names":["WeekDays","Object","freeze","MON","TUE","WED","THU","FRI","SAT","SUN","Digit","visible","className","this","format","props","label","value","React","Component","Counter","state","date","Date","calculated","calculate","weeks","days","hours","minutes","seconds","duration","Math","floor","targetDate","getTime","parseInt","setState","interval","setInterval","tick","clearInterval","Thought","text","class","App","readData","showTimeSelect","timeIntervals","timeFormat","dateFormat","selected","onChange","src","process","alt","urlParams","URLSearchParams","window","location","search","get","dayOfWeek","hour","Error","result","setDate","getDate","getDay","setHours","setMinutes","setUTCSeconds","getNextDayOfWeek","history","pushState","newURL","URL","href","toISOString","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb564f68.chunk.js","sourcesContent":["export const WeekDays = Object.freeze({\n    MON: 1,\n    TUE: 2,\n    WED: 3,\n    THU: 4,\n    FRI: 5,\n    SAT: 6,\n    SUN: 0,\n});\n\nexport function getNextDayOfWeek(date, dayOfWeek, hour) {\n    if (dayOfWeek < 0 || dayOfWeek > 6) {\n        throw new Error(\"invalid value for dayOfWeek [0..6]!\");\n    }\n\n    var result = new Date(date.getTime());\n    result.setDate(date.getDate() + (7 + dayOfWeek - date.getDay()) % 7);\n\n    if (hour) {\n        result.setHours(hour);\n        result.setMinutes(0);\n        result.setUTCSeconds(0);\n    }\n    return result;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Digit.css\";\n\nexport default class Digit extends React.Component {\n  static propTypes = {\n    value: PropTypes.number,\n    label: PropTypes.string,\n  };\n\n  visible = true;\n  render() {\n    return (\n      <div className=\"digit\">\n        <div className=\"number\">{this.format()}</div>\n        <div className=\"label\">{this.props.label}</div>\n      </div>\n    );\n  }\n\n  format() {\n      if (this.props.value < 10 && this.props.value >= 0) {\n          return \"0\" + this.props.value;\n      };\n      if (this.props.value < 0 && this.props.value > -10) {\n          return \"0\" + (-1 * this.props.value);\n      };\n      if (this.props.value <= -10) {\n          return \"\" + (-1 * this.props.value);\n      };\n      return this.props.value;\n  }\n}\n","import React from \"react\";\nimport Digit from \"./Digit\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Counter.css\";\n\nexport default class Counter extends React.Component {\n  static propTypes = {\n    targetDate: PropTypes.instanceOf(Date),\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n    }\n  }\n\n\n  render() {\n    const calculated = this.calculate();\n    return (\n      <div className=\"counter\">\n        {/* <Digit label=\"years\" value={calculated.years} /> */}\n        <Digit label=\"weeks\" value={calculated.weeks} />\n        <Digit label=\"days\" value={calculated.days} />\n        <Digit label=\"hours\" value={calculated.hours} />\n        <Digit label=\"minutes\" value={calculated.minutes} />\n        <Digit label=\"seconds\" value={calculated.seconds} />\n      </div>\n    );\n  }\n\n  calculate() {\n    const duration = Math.floor((this.props.targetDate.getTime() - this.state.date.getTime()) / 1000);\n\n    const seconds = parseInt((duration) % 60),\n      minutes = parseInt((duration / 60) % 60),\n      hours = parseInt((duration / 3600) % 24),\n      days = parseInt((duration / (3600 * 24)) % 7),\n      weeks = parseInt((duration / (3600 * 24 * 7)) % 56);\n\n    return {\n      weeks,\n      days,\n      hours,\n      minutes,\n      seconds,\n    }\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Thought.css\";\n\nexport default class Thought extends React.Component {\n    static propTypes = {\n        text: PropTypes.string,\n    };\n\n    visible = true;\n    render() {\n        if (!this.props.text) {\n            return null;\n        }\n        return (\n            <div class=\"thought\">\n                <span class=\"bubble\">{this.props.text}</span>\n                <div class=\"pointer\"></div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { getNextDayOfWeek, WeekDays } from \"../logic/dates.js\"\nimport Counter from \"./Counter\";\nimport Thought from \"./Thought\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      targetDate: new Date(),\n      text: \"\",\n    }\n  }\n\n  componentDidMount() {\n    this.readData();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"header\">\n          <DatePicker\n            showTimeSelect\n            timeIntervals={1}\n            timeFormat=\"HH:mm\"\n            dateFormat=\"PP - HH:mm\"\n            selected={this.state.targetDate}\n            onChange={date => this.onChange(date)}\n          />\n        </div>\n        <div className=\"center\">\n          <div className=\"content\">\n            <Thought text={this.state.text} />\n            <img src={process.env.PUBLIC_URL + \"/me.png\"} alt=\"Flowkap\" />\n            <Counter targetDate={this.state.targetDate} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  readData() {\n    const urlParams = new URLSearchParams(window.location.search);\n    let date = urlParams.get('date');\n    let text = urlParams.get('text');\n    if (!date) {\n      date = getNextDayOfWeek(new Date(), WeekDays.FRI, 17);\n      if (!text) {\n        text = \"When's it again Friday?\";\n      }\n    }\n    this.setState({\n      targetDate: new Date(date),\n      text: text,\n    });\n  }\n\n  onChange(date) {\n    this.setState({\n      targetDate: date\n    });\n    if (window.history.pushState) {\n      const newURL = new URL(window.location.href);\n      newURL.search = `date=${date.toISOString()}`;\n      window.history.pushState({ path: newURL.href }, '', newURL.href);\n    }\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./component/App\";\nimport \"./index.css\";\nimport \"github-fork-ribbon-css/gh-fork-ribbon.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}