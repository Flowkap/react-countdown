{"version":3,"sources":["component/Digit.js","component/Counter.js","component/App.js","index.js"],"names":["Digit","visible","className","this","format","props","label","value","React","Component","Counter","calculated","calculate","weeks","days","hours","minutes","seconds","now","Date","duration","Math","floor","getTime","console","log","parseInt","interval","setInterval","forceUpdate","clearInterval","App","date","readData","text","src","process","alt","URLSearchParams","window","location","search","get","ReactDOM","render","document","getElementById"],"mappings":"gSAKqBA,G,kNAMnBC,SAAU,E,uDAER,OACE,yBAAKC,UAAU,SACb,yBAAKA,UAAU,UAAUC,KAAKC,UAC9B,yBAAKF,UAAU,SAASC,KAAKE,MAAMC,U,+BAMrC,OAAIH,KAAKE,MAAME,MAAQ,IAAMJ,KAAKE,MAAME,OAAS,EACtC,IAAMJ,KAAKE,MAAME,MAExBJ,KAAKE,MAAME,MAAQ,GAAKJ,KAAKE,MAAME,OAAS,GACrC,KAAQ,EAAIJ,KAAKE,MAAME,MAE9BJ,KAAKE,MAAME,QAAU,GACd,IAAO,EAAIJ,KAAKE,MAAME,MAE1BJ,KAAKE,MAAME,U,GA1BWC,IAAMC,YCCpBC,G,6KAMjB,IAAMC,EAAaR,KAAKS,YACxB,OACE,yBAAKV,UAAU,WAEb,kBAAC,EAAD,CAAOI,MAAM,QAAQC,MAAOI,EAAWE,QACvC,kBAAC,EAAD,CAAOP,MAAM,OAAOC,MAAOI,EAAWG,OACtC,kBAAC,EAAD,CAAOR,MAAM,QAAQC,MAAOI,EAAWI,QACvC,kBAAC,EAAD,CAAOT,MAAM,UAAUC,MAAOI,EAAWK,UACzC,kBAAC,EAAD,CAAOV,MAAM,UAAUC,MAAOI,EAAWM,a,kCAM7C,IAAIC,EAAM,IAAIC,KACVC,EAAWC,KAAKC,OAAOnB,KAAKE,MAAME,MAAMgB,UAAYL,EAAIK,WAAa,KAEzEC,QAAQC,IAAIL,GAEZ,IAAIH,EAAUS,SAAUN,EAAY,IAClCJ,EAAUU,SAAUN,EAAW,GAAM,IACrCL,EAAQW,SAAUN,EAAW,KAAQ,IACrCN,EAAOY,SAAUN,EAAQ,MAAkB,GAG7C,MAAO,CACLP,MAHQa,SAAUN,EAAQ,OAAsB,IAIhDN,OACAC,QACAC,UACAC,a,0CAIiB,IAAD,OAClBd,KAAKwB,SAAWC,aAAY,kBAAM,EAAKC,gBAAe,O,6CAItDC,cAAc3B,KAAKwB,c,GA7CcnB,IAAMC,YCFtBsB,G,kNAEnBC,KAAO,IAAIb,K,uDAIT,OADAhB,KAAK8B,WAEH,yBAAK/B,UAAU,aACb,yBAAKA,UAAU,WACb,4BAAKC,KAAK+B,MACV,yBAAKC,IAAKC,0BAAoCC,IAAI,YAClD,kBAAC,EAAD,CAAS9B,MAAOJ,KAAK6B,W,iCAO3B,IACMA,EADY,IAAIM,gBAAgBC,OAAOC,SAASC,QAC/BC,IAAI,QACvBV,IACF7B,KAAK6B,KAAO,IAAIb,KAAKa,GACrBR,QAAQC,IAAIO,Q,GAtBexB,IAAMC,Y,YCEvCkC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.18b61de8.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Digit.css\";\n\nexport default class Digit extends React.Component {\n  static propTypes = {\n    value: PropTypes.number,\n    label: PropTypes.string,\n  };\n\n  visible = true;\n  render() {\n    return (\n      <div className=\"digit\">\n        <div className=\"number\">{this.format()}</div>\n        <div className=\"label\">{this.props.label}</div>\n      </div>\n    );\n  }\n\n  format() {\n      if (this.props.value < 10 && this.props.value >= 0) {\n          return \"0\" + this.props.value;\n      };\n      if (this.props.value < 0 && this.props.value > -10) {\n          return \"0\" + (-1 * this.props.value);\n      };\n      if (this.props.value <= -10) {\n          return \"\" + (-1 * this.props.value);\n      };\n      return this.props.value;\n  }\n}\n","import React from \"react\";\nimport Digit from \"./Digit\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Counter.css\";\n\nexport default class Counter extends React.Component {\n  static propTypes = {\n    value: PropTypes.instanceOf(Date),\n  };\n\n  render() {\n    const calculated = this.calculate();\n    return (\n      <div className=\"counter\">\n        {/* <Digit label=\"years\" value={calculated.years} /> */}\n        <Digit label=\"weeks\" value={calculated.weeks} />\n        <Digit label=\"days\" value={calculated.days} />\n        <Digit label=\"hours\" value={calculated.hours} />\n        <Digit label=\"minutes\" value={calculated.minutes} />\n        <Digit label=\"seconds\" value={calculated.seconds} />\n      </div>\n    );\n  }\n\n  calculate() {\n    var now = new Date();\n    var duration = Math.floor((this.props.value.getTime() - now.getTime()) / 1000);\n\n    console.log(duration);\n\n    var seconds = parseInt((duration) % 60),\n      minutes = parseInt((duration / 60) % 60),\n      hours = parseInt((duration / 3600) % 24),\n      days = parseInt((duration / (3600 * 24)) % 7),\n      weeks = parseInt((duration / (3600 * 24 * 7)) % 56);\n\n    return {\n      weeks,\n      days,\n      hours,\n      minutes,\n      seconds,\n    }\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.forceUpdate(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n}\n","import React from \"react\";\nimport Counter from \"./Counter\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n\n  date = new Date();\n\n  render() {\n    this.readData();\n    return (\n      <div className=\"container\">\n        <div className=\"content\">\n          <h1>{this.text}</h1>\n          <img src={process.env.PUBLIC_URL + \"/me.png\"} alt=\"Flowkap\" />\n          <Counter value={this.date} />\n        </div>\n      </div>\n    );\n  }\n\n  readData() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const date = urlParams.get('date');\n    if (date) {\n      this.date = new Date(date);\n      console.log(date);\n    }\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./component/App\";\nimport \"./index.css\";\nimport \"github-fork-ribbon-css/gh-fork-ribbon.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}